---
# file: roles/db/tasks/db_debian.yml

- name: Set debconf vars
  action: raw sudo echo mysql-server mysql-server/root_password password {{ db.mysql.root_password }} | sudo /usr/bin/debconf-set-selections

- name: Set debconf vars
  action: raw sudo echo mysql-server mysql-server/root_password_again password {{ db.mysql.root_password }} | sudo /usr/bin/debconf-set-selections

- name: Update apt cache
  action: apt update_cache=yes cache_valid_time=3600

- name: Install database
  action: apt pkg={{ item }} state=latest
  with_items:
      - mysql-client
      - mysql-server
      - python-mysqldb

- name: copy .my.cnf file with root password credentials
  template: src=root-my-cnf.j2 dest=/root/.my.cnf owner=root mode=0600

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ db.mysql.root_password }} login_user=root login_password={{ db.mysql.root_password }} check_implicit_admin=yes
  with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost

- name: ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
      - localhost
      - "{{ ansible_hostname }}"

- name: remove the test database
  mysql_db: name=test state=absent

- name: Create Database
  action: mysql_db login_user=root login_password={{ db.mysql.root_password }} name="{{ item.name }}"
  with_items:  mysql.users
  when:  mysql.users is defined

- name: Adds required MySQL users
  mysql_user: login_user=root login_password={{ db.mysql.root_password }} user="{{ item.name }}" password="{{ item.password }}" priv="{{ item.privs }}"
  with_items:  db.mysql.users
  when:  db.mysql.users is defined
